pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Clona el repositorio de GitHub
                checkout scm
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    // Construye las imágenes Docker para tus microservicios
                    sh 'docker-compose -f services/docker-compose.yml build'
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Ejecuta las pruebas (ajusta esto según tu stack de tecnología)
                    sh 'docker-compose -f services/docker-compose.yml run --rm go-auth go test'
                    sh 'docker-compose -f services/docker-compose.yml run --rm java-catalog ./gradlew test'
                    sh 'docker-compose -f services/docker-compose.yml run --rm php-progress phpunit'
                    sh 'docker-compose -f services/docker-compose.yml run --rm python-discuss pytest'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    // Realiza el análisis de calidad de código con SonarQube
                    // Asume que tienes configurado SonarQube en tu entorno de Jenkins
                    // Ajusta las configuraciones de SonarQube según sea necesario
                    withSonarQubeEnv('SonarQube_Server') {
                        sh 'docker-compose -f services/docker-compose.yml run --rm sonar-scanner'
                    }
                }
            }
        }

        stage('Push Docker Images to DockerHub') {
            steps {
                script {
                    // Publica las imágenes Docker en DockerHub (ajusta esto según tu configuración)
                    sh 'docker login -u tu-usuario -p tu-contraseña'
                    sh 'docker-compose -f services/docker-compose.yml push'
                }
            }
        }
    }

    post {
        always {
            // Limpia los contenedores después de cada ejecución
            sh 'docker-compose -f services/docker-compose.yml down'
        }
    }
}
